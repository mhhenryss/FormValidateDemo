@model FormValidateDemo.Models.ViewModels.FormViewModel
@{
	ViewBag.Title = "Home Page";
}
@section scripts
{
	@Scripts.Render("~/bundles/jqueryval")
}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>RemoteUser</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control", type = "password" } })
			@Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ConfirmPassWord, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ConfirmPassWord, new { htmlAttributes = new { @class = "form-control", type = "password" } })
			@Html.ValidationMessageFor(model => model.ConfirmPassWord, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
		</div>
	</div>



	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-default" />
		</div>
	</div>
</div>
}
@*<script>
	function submitFormAjax(submitUrl) {
		var formData = {
			LoginName: $("#txtusername").val(),
			Password: $("#txtpassword").val(),
			Mobile: $("#txttel").val(),
			RefNo: $("#RefNo").text(),
			BTag: $("#txtBTag").val(),
			ValidationCode: $("#txtValidationCode").val(),
			WeChat: $("#txtWeChat").val(),
			CrossDomainSessionId: $("#CrossDomainSessionId").val(),
			HiddenCode: $("#hiddenCode").val()
		};

		submitFormAjaxWithData(submitUrl, formData);
	}

	function submitFormAjaxWithData(submitUrl, formData) {
		$.ajax({
			method: "POST",
			url: submitUrl,
			data: formData,
			crossDomain: true
		}).done(function (response) {
			if (response.Success) {
				$("#successPopUp").show();
				setTimeout(function () {
					autoRedirect();
				}, 2000);
				return;
			}

			if (!isEmpty(response.TargetUrl)) {
				$("#registrationResult").load(response.TargetUrl);
				return;
			}

			var inputValid = validateRegisterForm(response.ErrorCode);
			if (response.ErrorCode === 2) {
				$("#usernameErrorMsg").text(validationMsg.LoginNameNotAvailable);
			}

			if (inputValid) {
				if (response.ErrorCode === 38) {
					reloadVerificationCode();
					displayError("ValidationCode", validationMsg.IncorrectValidationCode);
					$('#txtValidationCode').focus();
					return;
				}
				alert(contactSboMsg + "\nE7000" + response.ErrorCode);
			}
			reloadVerificationCode();
		}).fail(function () {
			alert("Error!");
		});
	}
</script>*@
